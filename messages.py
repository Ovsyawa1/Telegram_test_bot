from telebot import formatting, types
from decimal import Decimal

HELP_MESSAGE = """–ü—Ä–∏–≤–µ—Ç! –î–æ—Å—Ç–∞–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
- /start - –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º
- /help - –ø–æ–º–æ—â—å (—ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)
- /joke - —Å–ª—É—á–∞–π–Ω–∞—è —à—É—Ç–∫–∞
- /jpy_to_rub 100 - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å 100 JPY –≤ RUB
- /cvt 100 JPY IDR - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å 100 JPY –≤ IDR (–º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –≤–∞–ª—é—Ç—ã, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –ø–µ—Ä–µ–≤–æ–¥ –≤ RUB)
- /set_my_currency RUB - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–ª–µ–≤—É—é –≤–∞–ª—é—Ç—É
- /set_local_currency BYN - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é (–∏—Å—Ö–æ–¥–Ω—É—é) –≤–∞–ª—é—Ç—É
"""
START_MESSAGE = "<b>–ü—Ä–∏–≤–µ—Ç!</b> –î–∞–≤–∞–π –ó–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!"

SET_LOCAL_CURRENCY_HELP_MESSAGE = formatting.format_text(
    "–£—Å–ø–µ—à–Ω–æ —É–∫–∞–∑–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω—É—é –≤–∞–ª—é—Ç—É, –Ω–∞–ø—Ä–∏–º–µ—Ä:",
    formatting.hcode("/set_local_currency RUB")
)

SET_LOCAL_CURRENCY_SUCCESS_MESSAGE = formatting.format_text(
    "–í—ã —É—Å–ø–µ—à–Ω–æ —É–∫–∞–∑–∞–ª–∏ –ª–æ–∫–∞–ª—å–Ω—É—é –≤–∞–ª—é—Ç—É"
)

#survey
SURVEY_CANCEL_SUGGESTION = formatting.format_text(
    "",
    formatting.format_text(
        "–û—Ç–º–µ–Ω–∏—Ç—å –æ–ø—Ä–æ—Å –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π /cancel –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ",
        formatting.hcode("–æ—Ç–º–µ–Ω–∞"),
        separator=" ",
    )
)
SURVEY_MESSAGE_WELCOME_FULL_NAME = formatting.format_text(
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å. ",
    "–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è, –Ω–∞–ø—Ä–∏–º–µ—Ä –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω.",
    SURVEY_CANCEL_SUGGESTION,
)
SURVEY_ERROR_MESSAGE_FULL_NAME = formatting.format_text(
    "–≠—Ç–æ –Ω–µ —Ç–µ–∫—Å—Ç, –∞ –º—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —É–∑–Ω–∞—Ç—å –≤–∞—à–µ –∏–º—è",
    SURVEY_CANCEL_SUGGESTION,
)
SURVEY_MESSAGE_FULL_NAME_OK_AND_ASK_EMAIL = formatting.format_text(
    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {full_name}! ",
    "–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –í–∞—à—É –ø–æ—á—Ç—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞"
)
SURVEY_ERROR_MESSAGE_EMAIL = formatting.format_text(
    "–≠—Ç–æ –Ω–µ –Ω–∞—Å—Ç–æ—è—â–∏–π email",
    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –í–∞—à email",
    SURVEY_CANCEL_SUGGESTION
)
SURVEY_MESSAGE_EMAIL_OK = formatting.format_text(
    "–°–ø–∞—Å–∏–±–æ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
    "–ú–æ–∂–Ω–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å –í–∞—Å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É?"
)
SURVEY_ERROR_MESSAGE_FAVOURITE_NUMBER = formatting.format_text(
    "–≠—Ç–æ –Ω–µ –≤–∞–ª–∏–¥–Ω–æ–µ —á–∏—Å–ª–æ. –£–∫–∞–∂–∏—Ç–µ –Ω–∞—Å—Ç–æ—è—â–µ–µ —á–∏—Å–ª–æ!",
    SURVEY_CANCEL_SUGGESTION
)
SURVEY_MESSAGE_INVALID_YES_OR_NO = formatting.format_text(
    "–ù–µ –ø–æ–Ω–∏–º–∞—é, —É–∫–∞–∂–∏—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'"
)
SURVEY_MESSAGE_CANCELLED = formatting.format_text(
    "–û–ø—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω. –ü—Ä–æ–π—Ç–∏ –∑–∞–Ω–æ–≤–æ: /survey"
)

RANDOM_MESSAGE_TEXT = formatting.format_text(
    "–í–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π —Ä–∞–Ω–¥–æ–º–æ–º"
)

HELLO_MESSAGE = '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?'
HOW_ARE_YOU_MESSAGE = "–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –ê —É —Ç–µ–±—è?"
SAYONARA_MESSAGE = "<i>–ù–∞–¥–µ—é—Å—å –µ—â—ë —É–≤–∏–¥–∏–º—Å—è~</i>"

SECRET_MESSAGE_FOR_ADMIN = "–°–µ–∫—Ä–µ—Ç–∫–∞!"
SECRET_MESSAGE_NOT_ADMIN = "–ù–µ—Ç —Å–µ–∫—Ä–µ—Ç–∫–∏!" 

CVT_HELP_MESSAGE = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç –∫–æ–Ω—Ñ–µ—Ä—Ç–∞—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä:"
CONVERT_JPY_ERROR = formatting.format_text(
    CVT_HELP_MESSAGE,
    formatting.hcode("/jpy_to_rub 100"), #hcode
    separator=" "
)
IVALID_ARGUMENT_JPY_CONVERT = "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –∞—Ä–≥—É–º–µ–Ω—Ç–∞"
CVT_HOW_TO = formatting.format_text(
    CVT_HELP_MESSAGE,
    formatting.hcode("/cvt 100 JPY IDR"),
)
ERROR_FETCHING_CURRENCIES_TEXT = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
ERROR_NO_SUCH_CURRENCY = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≤–∞–ª—é—Ç–∞ {currency}, –≤–≤–µ–¥–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –≤–∞–ª—é—Ç—É"

SET_MY_CURRENCY_HELP_MESSAGE_TEXT = formatting.format_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≤–∞–ª—é—Ç—É. –ù–∞–ø—Ä–∏–º–µ—Ä: ",
                                                           formatting.hcode("/set_my_currency RUB"),
)               
SET_MY_CURRENCY_SUCCESS_MESSAGE_TEXT = formatting.format_text("–í–∞–ª—é—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:", "{currency}")

def format_currency_convert(
        from_currency: str, to_currency: str,
        from_amount, to_amount
        ):
    return formatting.format_text(
        formatting.hcode(f"{from_amount:,.2f}"),
        f"{from_currency.upper()} —ç—Ç–æ –ø—Ä–∏–º–µ—Ä–Ω–æ ",
        formatting.hcode(f"{to_amount:,.2f}"),
        f"{to_currency.upper()}",
        separator=" ",
    )

def format_jpy_to_rub_message(jpy_amount, rub_amount):
    return format_currency_convert(
        from_currency="JPY", to_currency="RUB",
        from_amount=jpy_amount, to_amount=rub_amount
    )

def format_message_content_currency_conversation(from_curr: str,  to_curr: str, amount_str, result_amount_str):
    
    content = types.InputTextMessageContent(
        message_text=formatting.format_text(
            f"{formatting.hcode(amount_str)} {from_curr} –≤ {to_curr}" ,
            formatting.hcode(result_amount_str)
        ),
        parse_mode="HTML"
    )
    return content

def format_content_to_result_arcticle(from_currency: str, to_currency: str, amount, total_amount):
    from_curr = from_currency.upper()
    to_curr = to_currency.upper()
    result_amount_str = f"{total_amount:,.2f}"
    amount_str = f"{amount:,}"
    content = format_message_content_currency_conversation(from_curr=from_curr, to_curr=to_curr, amount_str=amount_str, result_amount_str=result_amount_str)
    
    result = types.InlineQueryResultArticle(
        id=f"{from_currency}-{to_currency}-{amount}",
        title=f"{result_amount_str} {to_currency}",
        description=f"{amount_str} {from_curr} = {result_amount_str} {to_curr}",
        input_message_content=content,
    )
    
    return result

def prepare_default_resault_article(query_id):
    content = types.InputTextMessageContent(
        message_text=formatting.format_text(
            formatting.hbold("–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ inline –∑–∞–ø—Ä–æ—Å–∞!"),
            f"id –∑–∞–ø—Ä–æ—Å–∞ inline: {formatting.hcode(query_id)}",
        ),
        parse_mode="HTML",
    )
    result = types.InlineQueryResultArticle(
        id="default-answer",
        title="Inline —Å–æ–æ–±—â–µ–Ω–∏–µ",
        description="–¢—É—Ç –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –∑–∞–ø—Ä–æ—Å–µ –∏ –æ—Ç–≤–µ—Ç–µ",
        input_message_content=content,
    )
    return result

def format_message_content_currency_conversion(
    from_curr: str,
    to_curr: str,
    amount_str,
    result_amount_str,
):
    content = types.InputTextMessageContent(
        message_text=formatting.format_text(
            f"{formatting.hcode(amount_str)} {from_curr} –≤ {to_curr}:",
            formatting.hcode(result_amount_str),
        ),
        parse_mode="HTML",
    )
    return content


def format_content_to_result_article(
    from_currency: str,
    to_currency: str,
    amount,
    total_amount,
):
    from_curr = from_currency.upper()
    to_curr = to_currency.upper()
    amount_str = f"{amount:,}"
    result_amount_str = f"{total_amount:,.2f}"
    content = format_message_content_currency_conversion(
        from_curr=from_curr,
        to_curr=to_curr,
        amount_str=amount_str,
        result_amount_str=result_amount_str,
    )
    result = types.InlineQueryResultArticle(
        id=f"{from_currency}-{to_curr}-{amount}",
        title=f"{result_amount_str} {to_curr}",
        description=f"{amount_str} {from_curr} = {result_amount_str} {to_curr}",
        input_message_content=content,
    )
    return result


DONT_FORWARD_COMMANDS = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø–µ—Ä–µ—Å—ã–ª–∞–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã! –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–ø–∞—Å–Ω–æ!"

#r –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç –≤—Å–µ —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª—ã \...
MARKDOWN_TEXT = r""" 
*bold \*text*
_italic \_text_
__underline__
~strikethrough~
||spoiler||
*bold _italic bold ~italic bold strikethrough ||italic bold strikethrough spoiler||~ __underline italic bold___ bold*
[inline URL](http://www.example.com/)
[inline mention of a user](tg://user?id=953652374)
![üëç](tg://emoji?id=5368324170671202286)
`inline fixed-width code`
```
pre-formatted fixed-width code block
```
```python
pre-formatted fixed-width code block written in the Python programming language
```
>Block quotation started
>Block quotation continued
>Block quotation continued
>Block quotation continued
>The last line of the block quotation
**>The expandable block quotation started right after the previous block quotation
>It is separated from the previous block quotation by an empty bold entity
>Expandable block quotation continued
>Hidden by default part of the expandable block quotation started
>Expandable block quotation continued
>The last line of the expandable block quotation with the expandability mark||
"""

html_text = """
<b>bold</b>, <strong>bold</strong>
<i>italic</i>, <em>italic</em>
<u>underline</u>, <ins>underline</ins>
<s>strikethrough</s>, <strike>strikethrough</strike>, <del>strikethrough</del>
<span class="tg-spoiler">spoiler</span>, <tg-spoiler>spoiler</tg-spoiler>
<b>bold <i>italic bold <s>italic bold strikethrough <span class="tg-spoiler">italic bold strikethrough spoiler</span></s> <u>underline italic bold</u></i> bold</b>
<a href="http://www.example.com/">inline URL</a>
<a href="tg://user?id=953652374">inline mention of a user</a>
<tg-emoji emoji-id="5368324170671202286">üëç</tg-emoji>
<code>inline fixed-width code</code>
<pre>pre-formatted fixed-width code block</pre>
<pre><code class="language-python">pre-formatted fixed-width code block written in the Python programming language</code></pre>
<blockquote>Block quotation started\nBlock quotation continued\nThe last line of the block quotation</blockquote>
<blockquote expandable>Expandable block quotation started\nExpandable block quotation continued\nExpandable block quotation continued\nHidden by default part of the block quotation started\nExpandable block quotation continued\nThe last line of the block quotation</blockquote>
<blockquote>Hehehe
</blockquote>
"""